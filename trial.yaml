
  openapi: 3.0.3
  info:
    title: Document Management API
    version: 1.0.0
    description: API for managing documents on the server
  paths:
    /rest/openapi/document/v1/installation/{installationId}/attachments:
      post:
        summary: Create a new attachment
        description: Create a new attachment. Returns error 409 if the document already exists.
        parameters:
          - name: installationId
            in: path
            required: true
            description: Installation ID
            schema:
              type: string
              example: ABCDE-12345
        requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Der Name des Dokuments
                        pattern: '^[a-zA-Z0-9_.-]+$'
                      displayName:
                        type: string
                        description: Der Name des Dokuments zum anzeigen für den benutzer
                      pfad:
                        type: string
                        description: Der Pfad zu dem Dokument
                        pattern: '^[a-zA-Z0-9_.-/]+$'
                  document:
                    type: string
                    format: binary
                    description: The file to upload
        responses:
          '201':
            description: Document created successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Document created successfully
          '409':
            description: Conflict, document already exists
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      put:
        summary: Create or overwrite an attachment
        description: Create or overwrite an attachment at the specified path
        parameters:
          - name: installationId
            in: path
            required: true
            description: Installation ID
            schema:
              type: string
              example: ABCDE-12345
        requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Der Name des Dokuments
                        pattern: '^[a-zA-Z0-9_.-]+$'
                      displayName:
                        type: string
                        description: Der Name des Dokuments zum anzeigen für den benutzer
                      pfad:
                        type: string
                        description: Der Pfad zu dem Dokument
                        pattern: '^[a-zA-Z0-9_.-/]+$'
                  document:
                    type: string
                    format: binary
                    description: The file to upload
        responses:
          '200':
            description: Document created or overwritten successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Document created or overwritten successfully
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      delete:
        summary: Delete an attachment
        description: Delete an attachment at the specified path. Returns error 404 if the document does not exist.
        parameters:
          - name: installationId
            in: path
            required: true
            description: Installation ID
            schema:
              type: string
              example: ABCDE-12345
        responses:
          '200':
            description: Document deleted successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Document deleted successfully
          '404':
            description: Document not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      get:
        summary: List all attachments
        description: List all attachments with their metadata
        parameters:
          - name: installationId
            in: path
            required: true
            description: Installation ID
            schema:
              type: string
              example: ABCDE-12345
        responses:
          '200':
            description: List of documents
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the document
                        example: filename.pdf
                      displayName:
                        type: string
                        description: Display name of the document
                        example: Overview of something
                      pfad:
                        type: string
                        description: Path to the document
                        example: folder/subfolder
                      erstellt:
                        type: string
                        format: date-time
                        description: Creation date and time
                        example: 2023-10-01T12:00:00Z
                      version:
                        type: string
                        description: Version of the document
                        example: 1.0
                      groesse:
                        type: integer
                        description: Size of the document in bytes
                        example: 1024
                      mimeType:
                        type: string
                        description: MIME type of the document
                        example: application/pdf
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  components:
    schemas:
      Error:
        type: object
        properties:
          errorCode:
            type: string
            example: INTERNAL_SERVER_ERROR
          errorMessage:
            type: string
            example: An unexpected error occurred
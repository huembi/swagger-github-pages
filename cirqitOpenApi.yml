
openapi: 3.0.3
info:
  title: cirQit OpenAPI
  version: 1.0.0
  description: openAPI for REST communication with the cirQit app
  contact:
    email: info@cirqit.cloud
    name: cirQit
    url: https://www.cirqit.cloud
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  x-logo:
    url: https://cirqit.cloud/wp-content/uploads/2021/01/cirQit_kp_200x80.png
  x-visibility: public
servers:
  - url: https://sandbox.api.cirqit.cloud
    description: Sandbox APIs
    variables: {}
  - url: https://preprod.api.cirqit.cloud
    description: Non-Production APIs
    variables: {}
  - url: https://prod.api.cirqit.cloud
    description: Production APIs
    variables: {}
paths:
  /rest/openapi/document/v1/installation/{installationId}/documents:
    get:
      operationId: getList
      summary: get the available documents
      description: get the list of the documents for the given installationId
      parameters:
        - name: installationId
          description: Filter results to match a given installation
          in: path
          required: true
          schema:
            type: string
            example: ABCDE-12345
        - name: documentType
          description: Filter results to match a list of given document types only.
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          example:
            - ATTACHMENT
            - SCHEMA
            - LOGBOOK
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                  - pagination
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentMetadata'
        400:
          description: Client error, e.g. bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        401:
          description: Unauthorized, no access to the requested resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        404:
          description: Resource is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        5XX:
          description: Server error, e.g. internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'

  /rest/openapi/document/v1/installation/{installationId}/document/{documentId}:
    get:
      operationId: getDocument
      summary: get the document
      description: get thd document with the given documentId. The documentId can be discovered by the get metadata method.
      parameters:
        - name: installationId
          description: Filter results to match a given installation
          in: path
          required: true
          schema:
            type: string
            example: ABCDE-12345
        - name: documentId
          description: ID of an existing document.
          in: path
          required: true
          schema:
            type: string
            example: ABC-124
      responses:
        '200':
          description: Successful operation.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        400:
          description: Client error, e.g. bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        401:
          description: Unauthorized, no access to the requested resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        404:
          description: Resource is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        5XX:
          description: Server error, e.g. internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
    patch:
      operationId: overwriteDocument
      summary: overwrite a existing document
      description: Update a existing document based on the documentID
      parameters:
        - name: installationId
          description: Filter results to match a given installation
          in: path
          required: true
          schema:
            type: string
            example: ABCDE-12345
        - name: documentId
          description: ID of an existing document.
          in: path
          required: true
          schema:
            type: string
            example: ABC-124
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    documentType:
                      type: string
                      description: >-
                        Type of the uploaded document. Must match to a value
                        provided by the documentMetadata
                document:
                  type: string
                  format: binary
            encoding:
              document:
                contentType: >-
                  application/pdf, image/jpeg, image/tiff, image/png,
                  application/epub+zip
      responses:
        '201':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResponse'
        400:
          description: Client error, e.g. bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        401:
          description: Unauthorized, no access to the requested resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        404:
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        5XX:
          description: Server error, e.g. internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
    delete:
      operationId: deleteDocument
      summary: delete a existing document
      description: remove a existing document based on the documentId
      parameters:
        - name: installationId
          description: Filter results to match a given installation
          in: path
          required: true
          schema:
            type: string
            example: ABCDE-12345
        - name: documentId
          description: ID of an existing document.
          in: path
          required: true
          schema:
            type: string
            example: ABC-124
      responses:
        '201':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResponse'
        400:
          description: Client error, e.g. bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        401:
          description: Unauthorized, no access to the requested resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        404:
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        5XX:
          description: Server error, e.g. internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
  /rest/openapi/document/v1/installation/{installationId}/document:
    post:
      operationId: uploadDocument
      summary: Upload a new document
      description: Upload a new document to the installation
      parameters:
        - name: installationId
          description: Filter results to match a given installation
          in: path
          required: true
          schema:
            type: string
            example: ABCDE-12345
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    documentType:
                      type: string
                      description: >-
                        Type of the uploaded document, either a Attachment or the Schema.
                document:
                  type: string
                  format: binary
            encoding:
              document:
                contentType: >-
                  application/pdf, image/jpeg, image/tiff, image/png,
                  application/epub+zip
      responses:
        '201':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResponse'
        400:
          description: Client error, e.g. bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        401:
          description: Unauthorized, no access to the requested resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        409:
          description: Conflict, resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
        5XX:
          description: Server error, e.g. internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirQitError'
components:
  schemas:
    CreationResponse:
      type: object
      required:
        - documentId
      properties:
        documentId:
          type: string
          description: Unique id for a document.
          example: ABC-124
    DocumentMetadata:
      type: object
      required:
        - documentId
        - creationDate
        - documentType
      properties:
        documentId:
          type: string
          description: Unique id for a document.
          example: ABCDE-12345
        name:
          type: string
          description: name of the document.
          example: overview of something
        description:
          type: string
          description: description of the document.
          example: this document contains ...
        installationId:
          type: string
          description: installationID related to the document.
          example: ABCDE-12345
        creationDate:
          type: string
          format: date
          description: Creation date of the document in ISO format "YYYY-MM-DD".
        documentType:
          type: string
          description: Type of the document.
          example: pdf
    CirQitError:
      type: object
      required:
        - errorCode
        - errorMessage
      properties:
        errorCode:
          type: string
          example: VALIDATION_ERROR
          description: Unique error code.
        errorMessage:
          type: string
          example: Input validation failed
          description: Short description of the error.
        errorReasons:
          type: array
          items:
            type: object
            required:
              - message
              - code
            properties:
              message:
                type: string
                example: Attribute 'xxxx' must not be longer than 50 chars.
              code:
                type: string
                example: ERROR_012
                description: Unique reason code for this specific reason.
              location:
                type: string
                example: /rootLevel/xxxx
                description: Location within message where the error is related to.
          description: >-
            List of error reasons if multiple reasons are related to the same error.
  responses: {}
  parameters: {}
externalDocs:
  description: Developer documentation for cirQit OpenAPI
  url: https://www.cirqit.cloud/openAPI

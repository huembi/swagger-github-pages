{
  "openapi": "3.0.3",
  "info": {
    "title": "AXA Partner OpenAPI",
    "version": "1.1.1",
    "description": "AXA Partner OpenAPI",
    "contact": {
      "email": "p2p.axa@axa.ch",
      "name": "P2P",
      "url": "https://www.axa.ch"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://www.axa.ch/etc/clientlibs/axa/core-assets/images/logo-AXA.svg"
    },
    "x-visibility": "public"
  },
  "servers": [
    {
      "url": "https://api-sandbox.axa.ch",
      "description": "Sandbox API",
      "variables": {}
    },
    {
      "url": "https://api.acc.axa.ch",
      "description": "Non-Production API",
      "variables": {}
    },
    {
      "url": "https://api.axa.ch",
      "description": "Production API",
      "variables": {}
    }
  ],
  "paths": {
    "/rest/openapi/partner/v1/partners": {
      "get": {
        "parameters": [
          {
            "name": "type",
            "description": "Flag if natural or legal persons must be searched.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NATURAL_PERSON",
                "LEGAL_PERSON"
              ]
            }
          },
          {
            "name": "streetName",
            "schema": {
              "type": "string",
              "maxLength": 40
            },
            "in": "query",
            "required": false,
            "example": "Bahnhofstrasse",
            "description": "Street name filter attribute."
          },
          {
            "name": "postCode",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "example": 9500,
            "description": "Valid post code of the customer's current residence."
          },
          {
            "name": "town",
            "schema": {
              "type": "string",
              "maxLength": 40
            },
            "in": "query",
            "required": false,
            "example": "Wil",
            "description": "Name of the town of the customer's current residence."
          },
          {
            "name": "licensePlate",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "example": "SG 12345",
            "description": "License plate of the partner's car."
          },
          {
            "name": "firstname",
            "schema": {
              "type": "string",
              "maxLength": 40
            },
            "in": "query",
            "required": false,
            "description": "First name filter attribute. Only applicable if type = NATURAL_PERSON.",
            "example": "Harry"
          },
          {
            "name": "lastname",
            "schema": {
              "type": "string",
              "maxLength": 40
            },
            "in": "query",
            "required": false,
            "description": "Last name filter attribute. Only applicable if type = NATURAL_PERSON.",
            "example": "Hole"
          },
          {
            "name": "birthdate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "required": false,
            "example": "1990-07-21",
            "description": "Date of birth of the customer. Only applicable if type = NATURAL_PERSON."
          },
          {
            "name": "companyName",
            "schema": {
              "type": "string",
              "maxLength": 40
            },
            "in": "query",
            "required": false,
            "description": "Filter attribute. Only applicable if type = LEGAL_PERSON.",
            "example": "Blockwork GmbH"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PartnerNaturalPersonSearchResponse"
                      },
                      {
                        "$ref": "#/components/schemas/PartnerLegalPersonSearchResponse"
                      }
                    ]
                  },
                  "discriminator": {
                    "propertyName": "partnerType",
                    "mapping": {
                      "NATURAL_PERSON": "#/components/schemas/PartnerNaturalPersonSearchResponse",
                      "LEGAL_PERSON": "#/components/schemas/PartnerLegalPersonSearchResponse"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error, e.g. bad request, unauthorized, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AxaError"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error, e.g. internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AxaError"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2-client-credentials": [
              "axa-ch_openapi_partner_read"
            ]
          }
        ],
        "operationId": "readPartnerList",
        "description": "Read list of partners matching to the filter attributes. NOTE: For NATURAL_PERSON either licensePlate or firstname, lastname and postCode/town is mandatory. For LEGAL_PERSON either licensePlate or companyName and postCode/town is mandatory."
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PartnerNaturalPersonObject"
                  },
                  {
                    "$ref": "#/components/schemas/PartnerLegalPersonObject"
                  }
                ],
                "discriminator": {
                  "propertyName": "partnerType",
                  "mapping": {
                    "NATURAL_PERSON": "#/components/schemas/PartnerNaturalPersonObject",
                    "LEGAL_PERSON": "#/components/schemas/PartnerLegalPersonObject"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PartnerNaturalPersonObject"
                    },
                    {
                      "$ref": "#/components/schemas/PartnerLegalPersonObject"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "partnerType",
                    "mapping": {
                      "NATURAL_PERSON": "#/components/schemas/PartnerNaturalPersonObject",
                      "LEGAL_PERSON": "#/components/schemas/PartnerLegalPersonObject"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error, e.g. bad request, unauthorized, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AxaError"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error, e.g. internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AxaError"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2-client-credentials": [
              "axa-ch_openapi_partner_write"
            ]
          }
        ],
        "operationId": "createPartner",
        "description": "Create a new partner."
      }
    },
    "/rest/openapi/partner/v1/partners/{partnerId}/contact-documentation-items": {
      "get": {
        "parameters": [
          {
            "name": "partnerId",
            "description": "ID of the partner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": 123456
            }
          },
          {
            "name": "category",
            "description": "Filter the list for a given contact documentation category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "REPORT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ContactDocumentationItemLead"
                      },
                      {
                        "$ref": "#/components/schemas/ContactDocumentationItemReport"
                      }
                    ]
                  },
                  "discriminator": {
                    "propertyName": "category",
                    "mapping": {
                      "LEAD": "#/components/schemas/ContactDocumentationItemLead",
                      "REPORT": "#/components/schemas/ContactDocumentationItemReport"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/ReadContactDocumentationItem"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error, e.g. bad request, unauthorized, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AxaError"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error, e.g. internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AxaError"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2-client-credentials": [
              "axa-ch_openapi_partner_read"
            ]
          }
        ],
        "operationId": "readContactDocumentationItemList",
        "description": "Read list of contact documentation items of a given partner."
      }
    },
    "/rest/openapi/partner/v1/partners/{partnerId}/contact-documentation-items/{contactDocumentationItemId}/attachment": {
      "get": {
        "parameters": [
          {
            "name": "partnerId",
            "description": "ID of the partner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": 123456
            }
          },
          {
            "name": "contactDocumentationItemId",
            "description": "ID of the contact documentation item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "5254000b-04c2-1edd-aaa3-16bfddf1d91c"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error, e.g. bad request, unauthorized, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AxaError"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error, e.g. internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AxaError"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2-client-credentials": [
              "axa-ch_openapi_partner_read"
            ]
          }
        ],
        "operationId": "readContactDocumentationItemAttachment",
        "description": "Read the attachment of a given contact documentation item."
      }
    }
  },
  "components": {
    "schemas": {
      "PartnerNaturalPersonSearchResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PartnerBase"
          },
          {
            "$ref": "#/components/schemas/PartnerNaturalPerson"
          },
          {
            "$ref": "#/components/schemas/AddressWorldwideObject"
          }
        ]
      },
      "PartnerLegalPersonSearchResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PartnerBase"
          },
          {
            "$ref": "#/components/schemas/PartnerLegalPerson"
          },
          {
            "$ref": "#/components/schemas/AddressWorldwideObject"
          }
        ]
      },
      "PartnerNaturalPersonObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PartnerBase"
          },
          {
            "$ref": "#/components/schemas/PartnerNaturalPerson"
          },
          {
            "$ref": "#/components/schemas/AddressWorldwideObject"
          }
        ]
      },
      "PartnerLegalPersonObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PartnerBase"
          },
          {
            "$ref": "#/components/schemas/PartnerLegalPerson"
          },
          {
            "$ref": "#/components/schemas/AddressWorldwideObject"
          }
        ]
      },
      "PartnerBase": {
        "type": "object",
        "required": [
          "correspondenceLanguage"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "example": 7895684,
            "description": "Unique id to identify the partner within AXA Systems."
          },
          "correspondenceLanguage": {
            "type": "string",
            "enum": [
              "de",
              "it",
              "fr",
              "en"
            ],
            "example": "de",
            "description": "Correspondence language chosen by the partner according to ISO 639-1."
          },
          "phoneNumber": {
            "type": "string",
            "example": "+41 44 123 45 67",
            "description": "Phone number",
            "maxLength": 30
          },
          "mobilePhoneNumber": {
            "type": "string",
            "example": "+41 79 123 45 67",
            "description": "Mobile phone number",
            "maxLength": 30
          },
          "emailAddress": {
            "type": "string",
            "format": "email",
            "example": "jane.doe@example.com",
            "description": "email address",
            "maxLength": 241
          }
        }
      },
      "PartnerNaturalPerson": {
        "type": "object",
        "required": [
          "partnerType",
          "firstname",
          "lastname",
          "gender"
        ],
        "properties": {
          "partnerType": {
            "type": "string",
            "description": "Flag whether partner is a legal or natural person.",
            "enum": [
              "NATURAL_PERSON"
            ],
            "example": "NATURAL_PERSON"
          },
          "firstname": {
            "type": "string",
            "example": "Jane",
            "description": "Firstname of the partner.",
            "maxLength": 40
          },
          "lastname": {
            "type": "string",
            "example": "Doe",
            "description": "Lastname of the partner.",
            "maxLength": 40
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "example": "1990-07-21",
            "description": "Date of birth of the partner as defined by RFC 3339, section 5.6."
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ],
            "example": "FEMALE",
            "description": "Gender of the partner."
          },
          "citizenship": {
            "type": "string",
            "description": "Citizenship of the partner.",
            "example": "CH",
            "maxLength": 2
          }
        }
      },
      "PartnerLegalPerson": {
        "type": "object",
        "required": [
          "partnerType",
          "companyName"
        ],
        "properties": {
          "partnerType": {
            "type": "string",
            "description": "Flag whether partner is a legal or natural person.",
            "enum": [
              "LEGAL_PERSON"
            ],
            "example": "LEGAL_PERSON"
          },
          "companyName": {
            "type": "string",
            "description": "Name of the company.",
            "example": "CleanHouse GmbH",
            "maxLength": 40
          },
          "companyNameExtension": {
            "type": "string",
            "description": "Extended name of the company.",
            "example": "c/o Hans Meier",
            "maxLength": 40
          }
        }
      },
      "ContactDocumentationItemReport": {
        "type": "object",
        "required": [
          "id",
          "description",
          "creationDate",
          "category"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the contact documentation item",
            "example": "5254000b-04c2-1edd-aaa3-16bfddf1d91c"
          },
          "description": {
            "type": "string",
            "description": "Description of the contract documentation item",
            "example": "360 Grad Report"
          },
          "creationDate": {
            "type": "string",
            "format": "date",
            "example": "2023-07-11",
            "description": "Creation date of the item in ISO format \"YYYY-MM-DD\"."
          },
          "category": {
            "type": "string",
            "description": "Category of the contact documentation item",
            "enum": [
              "REPORT"
            ],
            "example": "REPORT"
          }
        }
      },
      "ContactDocumentationItemLead": {
        "type": "object",
        "required": [
          "id",
          "description",
          "creationDate",
          "category"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the contact documentation item",
            "example": "5254000b-04c2-1edd-aaa3-16bfddf1d91c"
          },
          "description": {
            "type": "string",
            "description": "Description of the contract documentation item",
            "example": "360 Grad Report"
          },
          "creationDate": {
            "type": "string",
            "format": "date",
            "example": "2023-07-11",
            "description": "Creation date of the item in ISO format \"YYYY-MM-DD\"."
          },
          "customerEmailAddress": {
            "type": "string",
            "description": "Email address of the customer the lead was created for.",
            "example": "harry.hole@example.com"
          },
          "category": {
            "type": "string",
            "description": "Category of the contact documentation item",
            "enum": [
              "LEAD"
            ],
            "example": "LEAD"
          }
        }
      },
      "AddressWorldwideObject": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/AddressWorldwide"
          }
        }
      },
      "AddressWorldwide": {
        "type": "object",
        "required": [
          "streetName",
          "postCode",
          "town",
          "country"
        ],
        "properties": {
          "streetName": {
            "type": "string",
            "example": "Bundesplatz",
            "description": "Street name",
            "maxLength": 60
          },
          "houseNumber": {
            "type": "string",
            "example": "1",
            "description": "House number, including letters if applicable",
            "maxLength": 10
          },
          "postCode": {
            "type": "string",
            "example": "3000",
            "description": "Valid post code of the customer's current residence.",
            "maxLength": 10
          },
          "town": {
            "type": "string",
            "example": "Bern",
            "description": "Name of the town",
            "maxLength": 40
          },
          "state": {
            "type": "string",
            "example": "BE",
            "readOnly": true,
            "description": "Abbreviation of the state",
            "maxLength": 3
          },
          "country": {
            "type": "string",
            "example": "CH",
            "description": "Country of residence according to ISO 3166-1.",
            "maxLength": 2
          }
        }
      },
      "AxaError": {
        "type": "object",
        "required": [
          "errorCode",
          "errorMessage"
        ],
        "properties": {
          "errorCode": {
            "type": "string",
            "example": "VALIDATION_ERROR",
            "description": "Unique error code."
          },
          "errorMessage": {
            "type": "string",
            "example": "Input validation failed",
            "description": "Short description of the error."
          },
          "errorReasons": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "message",
                "code"
              ],
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Attribute 'xxxx' must not be longer than 50 chars."
                },
                "code": {
                  "type": "string",
                  "example": "ERROR_012",
                  "description": "Unique reason code for this specific reason."
                },
                "location": {
                  "type": "string",
                  "example": "/rootLevel/xxxx",
                  "description": "Location within message where the error is related to."
                }
              }
            },
            "description": "List of error reasons if multiple reasons are related to the same error."
          }
        }
      }
    },
    "examples": {
      "ReadContactDocumentationItem": {
        "value": [
          {
            "id": "4358967b-26cc-4d21-82c4-af73376a6c83",
            "description": "360 Grad Report",
            "creationDate": "2023-08-12",
            "category": "REPORT"
          },
          {
            "id": "b809cfd9-a24b-4b75-ae04-636a0d7cc0e5",
            "description": "Vermittlung",
            "creationDate": "2023-07-24",
            "category": "LEAD",
            "customerEmailAddress": "harry.hole@example.com"
          }
        ]
      }
    },
    "securitySchemes": {
      "oauth2-client-credentials": {
        "type": "oauth2",
        "description": "Authorization: Bearer <token>",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://maam.axa.com/maam/v2/token",
            "scopes": {
              "axa-ch_openapi_partner_read": "openapi partner read scope",
              "axa-ch_openapi_partner_write": "openapi partner write scope"
            }
          }
        }
      }
    },
    "responses": {},
    "parameters": {}
  },
  "externalDocs": {
    "description": "Developer documentation for AXA OpenAPI",
    "url": "https://secure.axa.ch/developer"
  },
  "security": [
    {
      "oauth2-client-credentials": []
    }
  ]
}